#! /bin/bash

source /etc/profile
set -e

umask=002
user=pinvest
ulimit -SHn 65535
if [ $UID -ne 0 ];then
    echo only root can start service,try deploy_everyday.py
    exit 1
fi

export JAVA_OPTS="-Xms512m -Xmx2048m -XX:PermSize=512M -XX:MaxPermSize=512M -DallowOrigin=true -Xdebug -Dconfig.file=/datayes/invest-platform/sailfish/etc/application.conf -Djava.net.preferIPv4Stack=true"

TOPDIR=/datayes/invest-platform/sailfish
ETCDIR=$TOPDIR/etc
WORKDIR=$TOPDIR/web

pidfile='/var/run/sailfish_server.pid'


case $1 in
    start)
        cd $WORKDIR

        status=`ps -ef | grep sailfish | grep web | wc -l`
        if [[ $status -eq 1 ]]; then
            echo "sailfish_server is already running "
            exit 0
        fi

        /sbin/start-stop-daemon --background --verbose --start --oknodo \
            -c $user:$user -d $TOPDIR \
            --make-pidfile --pidfile $pidfile \
            --exec /bin/bash -- -c "java $JAVA_OPTS -jar /datayes/invest-platform/sailfish/web/sailfish*.jar > /tmp/sailfishlog 2>&1"

        sleep 2
        status=`ps -ef | grep sailfish | grep web | wc -l`
        if [[ $status -gt 0 ]]; then
            echo "start success"
            exit 0
        fi
        echo "start error!!"
        exit 1
        ;;


    stop)
        status=`ps -ef | grep sailfish | grep web | wc -l`
        if [[ $status -eq 0 ]]; then
            echo "sailfish_server is already stopped"
            exit 0
        fi
        ppid=`cat $pidfile`
        for i in `ps -ef | grep sailfish | grep web | awk '{print $2}'`; do
            if [[ $ppid -ne $i ]]; then
                kill $i
            fi
        done

        status=`ps -ef | grep sailfish | grep web | wc -l`
        count=0
        while [[ $status -gt 0 && $count -lt 10 ]]
        do
            status=`ps -ef | grep sailfish | grep web | wc -l`
            ((count += 1))
            sleep 1
        done

        status=`ps -ef | grep sailfish | grep web | wc -l`
        if [[ $status -eq 0 ]]; then
            echo "sailfish_server is stopped"
            exit 0
        fi
        echo "something is wrong"
        exit 1
        ;;

    status)
        pidinfile=`cat /var/run/sailfish_server.pid`
        pidprocess=`ps -ef | grep sailfish | grep web | awk '{print $2}' | sort | head -n 1`
        if [[ $pidinfile -eq $pidprocess ]]; then
            echo "sailfish_server is running, the process id is $pidinfile"
            exit 0
        fi
        echo "sailfish_server is not running"
        exit 1
        ;;

    *)
        echo "Usage: /etc/init.d/sailfish {start|stop|status}"
        exit 1
        ;;
esac

